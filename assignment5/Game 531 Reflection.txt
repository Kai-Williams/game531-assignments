Game 531 Reflection

For this project, I built a lighting system using the Phong model in OpenTK, with GLSL handling the vertex and fragment shaders. The setup mixes ambient, diffuse, and specular lighting from a single point light to give a rotating 3D cube a nice, realistic glow. The vertex shader sends over the transformed positions and normals, and the fragment shader takes care of the lighting calculations in world space using the light and camera positions, plus the material settings.
I also put together a simple perspective camera with adjustable model, view, and projection matrices, so you can rotate the cube and move the camera around in real time using the keyboard and mouse.
One of the trickier parts was getting the normals to behave properly—at first, the lighting looked off or even flipped because the normal matrix wasn’t being calculated right. I also ran into some annoying shader compilation errors from tiny syntax issues and had to sort out which GLSL version I was actually using. On top of that, tuning the mouse input and camera sensitivity took some trial and error to avoid jittery movement. After some debugging and tweaking, everything’s working smoothly now—the lighting reacts properly to the light source and camera, and the cube shows crisp specular highlights
